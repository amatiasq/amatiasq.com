---
import { MISSING_TRANSLATION, setLang, t } from '@util/i18n';
import type { CollectionEntry, ContentEntryMap } from 'astro:content';

type Entry =  CollectionEntry<keyof ContentEntryMap>;

const lang = setLang(Astro.url);
const hasSlot = Astro.slots.has(lang);
const value = await t(Astro.props.value ?? Astro.props);

const Component = isCollectionEntry(value)
    ? await renderCollectionEntry(value)
    : null;

function isCollectionEntry(x: object | null): x is Entry {
    return (
        x != null &&
        typeof x === 'object' &&
        'render' in x &&
        typeof x.render === 'function'
    );
}

async function renderCollectionEntry(entry: Entry) {
    const { Content } = await entry.render();
    return Content;
}

if (!hasSlot && !Component && value === MISSING_TRANSLATION)
    throw new Error(`Missing translation for "${JSON.stringify(Astro.props)}"`);
---

{(() => {
    if (hasSlot) {
        if (lang === 'en')
            return <slot name="en" />;
        if (lang === 'es')
            return <slot name="es" />;
    }

    if (Component)
        return <Component />;

    return value;
})()}
