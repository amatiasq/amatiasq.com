---
import type { CollectionEntry, ContentEntryMap, DataEntryMap } from 'astro:content';
import Link from "@components/atoms/Link.astro";
import Time from '@components/atoms/Time.astro';
import Tr from "@components/atoms/Tr.astro";
import { parseDate, getSlugWithoutDate } from "@util/date";

type AnyEntryMap = ContentEntryMap & DataEntryMap;

interface Props<C extends keyof AnyEntryMap> {
    class?: string;
    collection: C;
    entry: CollectionEntry<C>
}

const { class: className, collection, entry } = Astro.props as Props<keyof AnyEntryMap>
const slug = getSlugWithoutDate(entry);
---

<amq-dated-entry>
    <Time date={parseDate(entry)} omitDay />
    <Link page={`/${collection}/${slug}`} class={className}>
        <slot name="entry-title">
            <Tr value={entry.data.title} />
        </slot>
    </Link>
</amq-dated-entry>

<style lang="scss" is:global>
    amq-dated-entry {
        display: flex;
        align-items: center;
        gap: 1rem;

        time {
            font-family: var(--font-family-code);
            font-size: 0.8rem;
            color: var(--color-text-muted);
        }
    }
</style>
