---
import { setLang } from '@internals/i18n';
import { relativePath } from '@internals/relativePath';
import { basePath } from '@internals/package';

interface Props {
  page: string;
  class?: string | undefined;
  parentClass?: string;
  allowLanguageChange?: boolean;
}

const {
  page,
  class: className,
  parentClass,
  allowLanguageChange,
} = Astro.props;

const absolute = `${basePath}${absolutePath(page)}`;
const isParent = Astro.url.toString().startsWith(absolute);
const relative = relativePath(Astro.url, absolute);
const props = relative ? { href: relative } : {};

function absolutePath(path: string) {
  if (allowLanguageChange) {
    return path;
  }

  const lang = setLang(Astro.url);

  if (lang === 'en') {
    return path;
  }

  return path.startsWith('/') ? `/${lang}${path}` : `/${lang}/${path}`;
}
---

<a class:list={[className, isParent && parentClass]} {...props}>
  <slot />
</a>
