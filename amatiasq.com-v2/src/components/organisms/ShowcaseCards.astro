---
import type { ContentOf } from '../../internals/content';
import Time from '../atoms/Time.astro';
import Image from '../atoms/Image.astro';
import Tr from '../atoms/Tr.astro';
import MarkdownExcerpt from '../molecules/MarkdownExcerpt.astro';
import Link from '../atoms/Link.astro';
import type { Showcaseable } from '../../content/_meta';

type ShowcaseableContent = ContentOf<Showcaseable>;

interface Props {
  entries: ShowcaseableContent[];
  showYear?: boolean;
}

const { entries, showYear } = Astro.props;
---

<ol class="showcase-cards unstyled">
  {
    entries.map((entry) => (
      <li class="entry-card">
        <Link page={entry.href} class="entry-card">
          <Image value={entry.data.image} thumbnail />
          <h4>
            <Tr value={entry.data.title} />
            {showYear ? <Time date={entry.date} yearOnly /> : null}
          </h4>
          <MarkdownExcerpt md={entry.content} />
        </Link>
      </li>
    ))
  }

  <style is:global>
    .showcase-cards {
      --_columns: var(--columns, 1);
      --_gap: var(--gap, calc(var(--spacing) * 2));
      --_text-gap: var(--text-gap, calc(var(--spacing) / 2));

      flex: 1 1 100px;
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      row-gap: var(--_gap);

      /* grid-template-columns: repeat(var(--_columns), minmax(0, 1fr)); */
      grid-template-rows: repeat(var(--_columns), minmax(0, 1fr));
      gap: var(--_gap);
      margin: 0;
    }

    .showcase-cards > .title:empty {
      display: none;
    }

    .entry-card {
      width: 40%;
      color: currentColor;

      & img {
        display: block;
        width: 100%;
        aspect-ratio: 1.618033988;
        object-fit: cover;
        border: 1px solid grey;
      }

      & h4 {
        margin: var(--_text-gap) 0 calc(var(--_text-gap) * 0.9);
        display: flex;
        justify-showcase: space-between;
        gap: 1em;
      }
    }
  </style>
</ol>
