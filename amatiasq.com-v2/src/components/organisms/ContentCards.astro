---
import type { ContentOf } from '../../internals/content';
import Time from '../atoms/Time.astro';
import Image from '../atoms/Image.astro';
import Tr from '../atoms/Tr.astro';
import MarkdownExcerpt from '../molecules/MarkdownExcerpt.astro';
import Link from '../atoms/Link.astro';
import type { Showcaseable } from '../../content/_meta';
import ViewAll from '../atoms/ViewAll.astro';

type ShowcaseableContent = ContentOf<Showcaseable>;

// interface Props {
//   entries: ShowcaseableContent[];
//   viewAll?: string;
//   max?: number;
//   showYear?: boolean;
// }

type Props = {
  entries: ShowcaseableContent[];
  showYear?: boolean;
} & (
  | {
      viewAll?: never;
      max?: never;
    }
  | {
      viewAll: string;
      max: number;
    }
);

const { entries, showYear, max, viewAll } = Astro.props;
const visible = max ? entries.slice(0, max) : entries;
---

<ol class="content-cards unstyled">
  {
    visible.map((entry) => (
      <li class="entry-card">
        <Link page={entry.href} class="entry-card">
          <Image value={entry.data.image} thumbnail />
          <h4>
            <Tr value={entry.data.title} />
            {showYear ? <Time date={entry.date} yearOnly /> : null}
          </h4>
          <MarkdownExcerpt md={entry.content} />
        </Link>
      </li>
    ))
  }
</ol>

{
  max && entries.length > max ? (
    <ViewAll page={viewAll} remaining={entries.length - max} />
  ) : null
}

<style is:global>
  .content-cards {
    --_columns: var(--columns, 1);
    --_gap: var(--gap, calc(var(--spacing) * 2));
    --_text-gap: var(--text-gap, calc(var(--spacing) / 2));

    display: grid;
    grid-template-columns: repeat(var(--_columns), minmax(0, 1fr));
    gap: var(--_gap);
    margin: 0;
  }

  .content-cards > .title:empty {
    display: none;
  }

  .entry-card {
    color: currentColor;

    & img {
      display: block;
      width: 100%;
      aspect-ratio: 1.618033988;
      object-fit: cover;
      border: 1px solid grey;
    }

    & h4 {
      margin: var(--_text-gap) 0 calc(var(--_text-gap) * 0.9);
      display: flex;
      justify-content: space-between;
      gap: 1em;
    }
  }
</style>
